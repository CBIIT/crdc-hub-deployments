- name: deploy authn microservice
  hosts: all
  connection: local
  gather_facts: yes
  become: yes

  tasks:
    #install collections
    - name: install aws collection
      shell: "ansible-galaxy collection install {{ item | quote }} --force"
      loop:
        - community.docker:<=3.4.3
        - amazon.aws:<=5.4.0
        - community.aws:<=3.2.0
        #- git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,gmb
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,v1.5

    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    #deploy authn
    - name: deploy stage for authn microservice
      include_role:
        name: bento.common.ecs
      vars:
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
#        authn_version: "{{ lookup('env','AUTHN_VERSION') }}"
        region: "us-east-1"
#        cookie_secret: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih.cookie_secret', nested=true, region='us-east-1' ) }}"

#        email_user: "{{ lookup('amazon.aws.aws_secret', 'smtp.email_user', nested=true, region='us-east-1' ) }}"
#        email_password: "{{ lookup('amazon.aws.aws_secret', 'smtp.email_password', nested=true, region='us-east-1' ) }}"
        #mongodb
        mongo_db_host: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.mongo_db_host', nested=true, region='us-east-1' ) }}"
        mongo_db_port: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.mongo_db_port', nested=true, region='us-east-1' ) }}"
        mongo_db_password: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.mongo_db_password', nested=true, region='us-east-1' ) }}"
        mongo_db_user: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.mongo_db_user', nested=true, region='us-east-1' ) }}"
#        mongo_db_database: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.mongo_db_database', nested=true, region='us-east-1' ) }}"
        #nih
        nih_client_id: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_client_id', nested=true, region='us-east-1' ) }}"
        nih_client_secret: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_client_secret', nested=true, region='us-east-1' ) }}"
        nih_base_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_base_url', nested=true, region='us-east-1' ) }}"
        nih_redirect_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_redirect_url', nested=true, region='us-east-1' ) }}"
        nih_userinfo_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_userinfo_url', nested=true, region='us-east-1' ) }}"
        nih_authorize_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_authorize_url', nested=true, region='us-east-1' ) }}"
        nih_token_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_token_url', nested=true, region='us-east-1' ) }}"
        nih_logout_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_logout_url', nested=true, region='us-east-1' ) }}"
        ansible_python_interpreter: /usr/bin/python3
        project_name: "{{project_name}}"
        platform: aws
        container_name: "authn"
        image_version: "{{ lookup('env','AUTHN_VERSION') }}"
        service_name: "{{ project_name }}-{{ tier }}-authn"
        tier: "{{ lookup('env','TIER') }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
#        neo4j_user: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_user', nested=true, region='us-east-1' ) }}"
#        neo4j_password: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_password', nested=true, region='us-east-1' ) }}"
#        neo4j_ip: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_ip', nested=true, region='us-east-1' ) }}"

        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1' ) }}"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_authn', nested=true, region='us-east-1' ) }}"
        container_port: "8082"
        container_memory: "1024"
        container_cpu: "512"
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
        #Environment
        container_env:
          - name: VERSION
            value: "{{image_version}}"
          - name: SESSION_SECRET
            value: "abcd256asghaaamnkloofghj"
          - name: SESSION_TIMEOUT
            value: "1200"
          - name: IDP
            value: "nih"
#          - name: GOOGLE_CLIENT_ID
#            value: "{{idp_client_id}}"
#          - name: GOOGLE_CLIENT_SECRET
#            value: "{{idp_client_secret}}"
          - name: DATE
            value: "{{ansible_date_time.date}}"
          - name: PROJECT
            value: "{{project_name}}"
#          - name: GOOGLE_REDIRECT_URL
#            value: "{% if tier == 'prod'  and project_name == 'bento' %}https://{{domain_name}}{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}{% endif %}"
          - name: NEW_RELIC_LICENSE_KEY
            value: "{{ newrelic_license_key }}"
          - name: NEW_RELIC_APP_NAME
            value: "{{project_name}}-{{tier}}-authn"
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_HOST
            value: "gov-collector.newrelic.com"
          - name: NEW_RELIC_LOG_FILE_NAME
            value: "STDOUT"
          - name: NEW_RELIC_LABELS
            value: "Project:{{ project_name }};Environment:{{ tier }}"
          # Mongo DB
          - name: MONGO_DB_HOST
            value: "{{ mongo_db_host }}"
          - name: MONGO_DB_PORT
            value: "{{ mongo_db_port }}"
          - name: MONGO_DB_PASSWORD
            value: "{{ mongo_db_password }}"
          - name: MONGO_DB_USER
            value: "{{ mongo_db_user }}"
#          - name: MONGO_DB_DATABASE
#            value: "{{ mongo_db_database }}" 
          # Email Notification Config
          #- name: EMAIL_SMTP_HOST
          #  value: email-smtp.us-east-1.amazonaws.com
          #- name: EMAIL_SMTP_PORT
          #  value: "465"
          # If Sent From AWS SMTP
          #- name: EMAIL_USER
          #  value: "{{email_user}}"
          #- name: EMAIL_PASSWORD
          #  value: "{{email_user}}"
          # NIH LOGIN Config
          - name: NIH_CLIENT_ID
            value: "{{nih_client_id}}"
          - name: NIH_CLIENT_SECRET
            value: "{{nih_client_secret}}"
          - name: NIH_BASE_URL
            value: "{{nih_base_url}}"
          - name: NIH_REDIRECT_URL
            value: "{{nih_redirect_url}}"
          - name: NIH_USERINFO_URL
            value: "{{nih_userinfo_url}}"
          - name: NIH_AUTHORIZE_URL
            value: "{{nih_authorize_url}}"
          - name: NIH_TOKEN_URL
            value: "{{nih_token_url}}"
          - name: NIH_LOGOUT_URL
            value: "{{nih_logout_url}}"
          - name: NIH_SCOPE
            value: "openid email profile"
          - name: NIH_PROMPT
            value: login
