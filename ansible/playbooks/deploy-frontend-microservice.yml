- name: deploy frontend microservice
  hosts: all
  connection: local
  gather_facts: no

  tasks:
    #install collections
    - name: install aws collection
      shell: "ansible-galaxy collection install {{ item | quote }} --force"
      loop:
        - community.docker:<=3.4.3
        - amazon.aws:<=5.4.0
        - community.aws:<=3.2.0
        #- git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,main
        #- git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,ctdc
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,v1.5

    #docker login
    - name: docker login
      include_role:
        name: ecr-central-login
      vars:
        region: us-east-1

    #deploy frontend
    - name: deploy stage for frontend microservice
      include_role:
        name: bento.common.ecs
        apply:
          environment:
            AWS_RETRY_MODE: "standard"
            AWS_MAX_ATTEMPTS: 10
      vars:
        ansible_python_interpreter: /usr/bin/python3
        project_name: "{{ project_name }}"
        region: us-east-1
        service_name: "{{ project_name }}-{{ tier }}-frontend"
        container_name: "frontend"
        frontend_version: "{{ lookup('env','FE_VERSION') }}"
        backend_version: "{{ lookup('env','BE_VERSION') }}"
        upload_cli_version: "{{ lookup('env','UPLOAD_CLI_VERSION') }}" 
        image_version: "{{ frontend_version }}"
        tier: "{{ tier }}"
        cli_zip_file: "https://github.com/CBIIT/crdc-datahub-cli-uploader/releases/download/{{upload_cli_version}}/crdc-datahub-cli-uploader-src.zip"
        cli_windows_zip_file: "https://github.com/CBIIT/crdc-datahub-cli-uploader/releases/download/{{upload_cli_version}}/crdc-datahub-cli-uploader-windows.zip"
        cli_mac_zip_x64_file: "https://github.com/CBIIT/crdc-datahub-cli-uploader/releases/download/{{upload_cli_version}}/crdc-datahub-cli-uploader-mac-x64.zip"
        cli_mac_zip_arm_file: "https://github.com/CBIIT/crdc-datahub-cli-uploader/releases/download/{{upload_cli_version}}/crdc-datahub-cli-uploader-mac-arm.zip"
        ## roles
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
        ## sumologic
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_frontend', nested=true, region='us-east-1' ) }}"
        ## newrelic
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1' ) }}"
        ## about content
#        about_content_url: "{% if tier == 'prod' %}https://raw.githubusercontent.com/CBIIT/bento-ctdc-frontend/{{ frontend_version | split('-') | first }}/src/content/prod/aboutPagesContent.yaml{% else %}https://raw.githubusercontent.com/CBIIT/bento-ctdc-frontend/{{ frontend_version | split('-') | first }}/src/content/{{ tier }}/aboutPagesContent.yaml{% endif %}"
        #nih
        nih_client_id: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_client_id', nested=true, region='us-east-1' ) }}"
        nih_authorize_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_authorize_url', nested=true, region='us-east-1' ) }}" 
        #nih_authentication_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_authentication_url', nested=true, region='us-east-1' ) }}" 
        nih_redirect_url: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/nih/{{ tier }}.nih_redirect_url', nested=true, region='us-east-1' ) }}" 
        ## ecs
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        container_port: 80
        container_memory: "512"
        container_cpu: "256"
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
#        backend_google_analytics_id: "UA-154442677-1"
        container_env:
          # API URLs
          - name: REACT_APP_BACKEND_API
            value: "{% if tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/api/graphql{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/api/graphql{% endif %}"
#          - name: REACT_APP_FILE_SERVICE_API
#            value: "{% if tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/api/files/{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/api/files/{% endif %}"
          # Versions
          - name: REACT_APP_BE_VERSION
            value: "{{ backend_version }}"
          - name: REACT_APP_FE_VERSION
            value: "{{ frontend_version }}"
          # Static Content
#          - name: REACT_APP_ABOUT_CONTENT_URL
#            value: "{{ about_content_url }}"
          # New Relic
          - name: NEW_RELIC_LICENSE_KEY
            value: "{{ newrelic_license_key }}"
          - name: NEW_RELIC_APP_NAME
            value: "{{ project_name }}-{{ tier }}-{{ container_name }}"
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_HOST
            value: "gov-collector.newrelic.com"
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_LABELS
            value: "Project:{{ project_name }};Environment:{{ tier }}"
          # Analytics
#          - name: REACT_APP_GA_TRACKING_ID
#            value: "{{ backend_google_analytics_id }}"
          # NIH Login Config
          - name: NIH_CLIENT_ID
            value: "{{nih_client_id}}"
          - name: NIH_AUTHORIZE_URL
            value: "{{nih_authorize_url}}"
          - name: NIH_REDIRECT_URL
            value: "{{nih_redirect_url}}"
          - name: REACT_APP_NIH_CLIENT_ID
            value: "{{nih_client_id}}"
          - name: REACT_APP_NIH_AUTHENTICATION_URL
            value: "{{nih_authorize_url}}"
          - name: REACT_APP_NIH_REDIRECT_URL
            value: "{{nih_redirect_url}}"
          - name: REACT_APP_UPLOADER_CLI
            value: "{{cli_zip_file}}"
          - name: REACT_APP_UPLOADER_CLI_WINDOWS
            value: "{{cli_windows_zip_file}}"
          - name: REACT_APP_UPLOADER_CLI_MAC_X64
            value: "{{cli_mac_zip_x64_file}}"
          - name: REACT_APP_UPLOADER_CLI_MAC_ARM
            value: "{{cli_mac_zip_arm_file}}"
          - name: REACT_APP_UPLOADER_CLI_VERSION
            value: "{{upload_cli_version}}"
          - name: HIDDEN_MODELS
            value: "{{ 'Hidden Model' if tier in ['dev', 'qa', 'qa2'] else 'Test MDF,Hidden Model, CCDI' }}"
          - name: DEV_TIER
            value: "{% if tier == 'dev' %}dev{% elif tier == 'dev2' %}dev2{% elif tier == 'qa' %}qa{% elif tier == 'qa2' %}qa2{% elif tier == 'stage'%}stage{% else %}prod{% endif %}"
          - name: REACT_APP_GA_TRACKING_ID
            value: "{% if tier == 'dev' or tier == 'dev2' %}G-KYERB9M1LR{% elif tier == 'qa' or tier == 'qa2' %}G-K5VXJ7G688{% elif tier == 'stage'%}G-GL82J5RLF4{% else %}G-Q3J513LR16{% endif %}"
