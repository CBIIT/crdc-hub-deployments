resource "aws_s3_bucket" "s3_submission" {
  bucket        = "${local.resource_prefix}-submission"
#  force_destroy = var.s3_force_destroy
  tags = var.s3_tags
}

#resource "aws_s3_bucket_ownership_controls" "s3" {
#  bucket = aws_s3_bucket.s3.id
#  rule {
#    object_ownership = var.object_ownership
#  }
#}
#resource "aws_s3_bucket_acl" "s3" {
#  bucket = aws_s3_bucket.s3.id
#  acl    = "private"
#}

resource "aws_s3_bucket_public_access_block" "s3_submission" {
  bucket                  = aws_s3_bucket.s3_submission.id
  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true
}

resource "aws_s3_bucket_server_side_encryption_configuration" "s3_submission" {
  bucket = aws_s3_bucket.s3_submission.id

  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm = "AES256"
    }
  }
}

resource "aws_s3_bucket_notification" "s3_submission" {
  bucket      = aws_s3_bucket.s3_submission.id
  eventbridge = var.eventbridge
}

resource "aws_s3_bucket_versioning" "s3_submission" {
  bucket = aws_s3_bucket.s3_submission.id

  versioning_configuration {
    status = var.s3_versioning_status
  }
}
#create s3 bucket policy if required - for ref only, can put this resource under the project when using module
#resource "aws_s3_bucket_policy" "s3_cf_policy" {
#  bucket = aws_s3_bucket.s3.id
#  policy = data.aws_iam_policy_document.s3_cloudfront_policy.json
#}

